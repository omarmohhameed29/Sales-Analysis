-- set sales datase to be default
use sales;

-----------------------------------------------------------------   DATA CLEANING ---------------------------------------
-- inspect transactions column
select *
from transactions
limit 10;

-- remove invalid sales_amount
delete from transactions
where sales_amount <= 0;

-- see types of currencies
select distinct currency
from transactions;

-- unique currencies: 
-- 	'INR'
-- 	'USD'
-- 	'INR\r'
-- 	'USD\r'

-- identify count of each currency to remove duplicate ones
select currency, count(*)
from transactions
group by currency;

-- remove 'INR', 'USD'
delete from transactions
where currency in ('INR', "USD"); 

-- normalize currencies
-- Create the new column
ALTER TABLE transactions ADD COLUMN norm_sales_amount integer;

-- Update the normalized_price column using the exchange rates
UPDATE transactions
SET norm_sales_amount = CASE
    WHEN currency = 'USD\r' THEN sales_amount * 75
    WHEN currency = 'INR\r' THEN sales_amount
    ELSE NULL -- Handle cases where currency is neither pound nor usd
    END;

-- inspect markets table
select markets_name
from markets;

-- remove 'New York' and 'Paris' record as this dataset shows only indian market
delete from markets
where markets_name in ('New York', 'Paris');

-----------------------------------------------------------------   DATA ANALYSIS ---------------------------------------
-- What are the total sales revenue and quantity sold for each product?
select sum(norm_sales_amount) total_sales, count(*) total_QTY, p.product_code, p.product_type
from transactions t
join products p
on t.product_code = p.product_code
Group by 3, 4
order by 1 DESC;


-- Which customers made the highest number of purchases?
select count(*) num_purchases, c.custmer_name customer_name
from transactions t
join customers c
on t.customer_code = c.customer_code 
group by 2
order by 1 desc
limit 1;



-- What is the total revenue generated by each market?
select sum(norm_sales_amount) revenue, m.markets_name market 
from transactions t
join markets m
on t.market_code = m.markets_code
group by 2
order by 1 desc;


-- Which month had the highest sales revenue?
select sum(norm_sales_amount), month(order_date)
from transactions
group by 2
order by 1 DESC
limit 1;

-- What is the average transaction value?
select avg(norm_sales_amount)
from transactions;

-- How many customers have made repeat purchases?
select count(*) cust_repeat_purchase
from (
	select count(*) num_of_purchases, customer_code code
	from transactions
	group by 2
    ) sub
where num_of_purchases <> 1;


-- Which customers have not made any purchases?
select *
from customers c
left join transactions t
on t.customer_code = c.customer_code
where t.customer_code is null;

-- What is the average price of each product?
select avg(norm_sales_amount / sales_qty) avg_price, product_code
from transactions
group by 2;

